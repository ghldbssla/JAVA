상속(inheritance)
	1. 기존에 선언된 클래스의 필드를 다른 클래스에서 사용하고자 할때
	상속을 한다.
	
	2. 여러 클래스를 만들고자 할 때 공통요소들을 묶어서 부모 클래스를 만든 후 상속시켜 준다.
class 자식클래스명 extends 부모클래스명{

}

자식클래스, 하위클래스, 서브클래스, 파생클래스
부모클래스, 상위클래스, 슈퍼클래스, 기반클래스

생성자
	자식 객체는 자식 생성자를 호출하여 객체화를 한다.
	메모리에 자식필드만 올라갔다면 자식 객체를 절대 부모필드에 접근할 수 없다.
	까라서 자식 생성자를 호출하게 되면 부모 생성자가 자동으로 가장 먼저 호출되고
	그 이후에 자식의 필드가 따라 붙는다. 따라서 자식 객체로 부모 필드에 접근할 수 
	있게 된다. 자식생성자 맨 첫줄에는 항상 super(); 라는 부모클래스의 생성자가 호출된다.

다형성
	2. 오버라이딩(overriding) : 재정의
		부모 클래스의 필드에 이미 a 라는 메소드가 존재한다면
		부모 클래스가 먼저 호출되기 때문에 a() 메소드가 메모리에 먼저 올라간다.
		자식 생성자 호출시 같은 이름인 a()메소드가 선언되어 있다면,
		그 올라간 메모리를 자식클래스의 a()메소드로 덮어 씌운다.
		그러므로 자식객체로 a()를 사용하면 재정의된 기능으로 사용이되며
		이를 재정의 라고 한다.

up casting
	부모 타입의 객체에 자식 필드를 넣는것

	부모클래스명 객체명 = new 자식생성자();

	자식 클래스에 추가된 필드들은 오버라이딩을 제외하고는 사용할 수 없다.

down casting
	up casting된 객체를 자식 객체에 넣는것

	자식클래스명 객체명 = (자식클래스명)upcasting된 객체


